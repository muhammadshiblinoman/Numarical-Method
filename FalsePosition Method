#include <bits/stdc++.h>
using namespace std;

class FalseMethod{
private:
    double a;
    double b;
    double tolerance;
public:
    FalseMethod(double fi, double se, double tol) 
                                : a(fi), b(se), tolerance(tol){}

    double calculateValue(double x) {
        return pow(x, 2) - 4;
    }

    int i = 0;
    void Iteration() {
        double x;

        while(fabs(calculateValue(x)) >= tolerance) {
            double fa = calculateValue(a);
            double fb = calculateValue(b);

            x = (a*fb - b*fa) / (fb - fa);

            if(calculateValue(x) == 0.0) {
                break;
            } else if(calculateValue(x)*calculateValue(a) < 0) {
                b = x;
            } else {
                a = x;
            }
            printf("The New Value of x%d = %.6f\n", i, x);
            i++;
        }

        printf("The Final Root is = %f\n" ,x);
    }
};

int main() {
    srand((unsigned) time(NULL));

    double a = rand()%10 - 5;
    double b = a + rand()%10 + 3;
    double tolerance = 0.0001;

    cout << "a = " << a << " b = " << b << '\n';

    FalseMethod fls = FalseMethod(a, b, tolerance);

    if(fls.calculateValue(a)*fls.calculateValue(b) < 0) {
        fls.Iteration();
    }
}
